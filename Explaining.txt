پروژه من کلا در این روند هست که یک تابع main دارم و کلاس command processor برایم کار loading از روی فایل  save را انجام میدهد  و برنامه را run میکند.
یک کلاس Singletone دارم که کار save و load را برایم انجام میدهد که با کتابخانه ی gson اینکار را انجام میدهم.
دلیل انتحاب gson هم راحتی کار باهاش بود که چون پروژه‌ام gradle هستش استفاده از این لایبرری کار را برايم آسان کرده.
حالا یک کلاس manager دارم که کارش manage کردن تمام account ها با همدیگر است و در آخر هم فقط کلاس manager را save میکنم که همه چیز save شود و این نقطه ی قوت برنامه ی من است که با ذخیره کردن اطلاعات یک کلاس کل برنامه ذخیره میشود.

حالا من یک سری اکانت دارم که هرکدام یک 
نام،
 نام خانوادگی،
 یوزرنیم(که یکتاست و غیر قایل تغییر)،
 آیدی که براساس یوزرنیم است،
رمز،
ایمیل،
شماره تلفن،
بیو،
آنلاین بودن،
تاریخ تولد،
لست سین،
پابلیک یا پرایوت بودن،
اکتیو یا دی‌اکتیو بودن،
وضعیت نشان دادن لست سین،
ليست هایی از (فالویینگ‌ها و فالوورها و بلک ليست و افراد که توسط کاربر mute شده‌اند و لیست هایی که کاربر ساخته) که آنها را برای راحتی save کردن و کار کردن هم به صورت یوزر نیم و هم به صورت اکانت دارد،
 یک سری page دارند که page ها عبارتند از: menu, personal, time line, setting, messages, explorer
و هر اکانت یک سری توییت برای خودش دارد.

حالا هر پیج را توضیح میدهیم:

Time linePage:
هر تايم لاين برای یک اکاینت یک لیست از توییت ها دارد و یک ایندکس توییت که توییت همان لحظه را نشان میدهد.
توییت ها دانه به دانه نمايش عاده میشوند و اولین توییتی که نمایش داده میشود آخرین توییتی است گذاشته شده است.
و در اینجا ما میتوانیم به توییت بعدی یا قبلی برویم ،
توییت فعلا را مشاهده و فیو کنیم،
توییت فعلا را سیو یا فوروارد کنیم،
يوزر صاحب توییت فعلی رامشاهده، بلاک، ریپورت یا میوت کنیم،
کامنت بگذاریم و امنت ها را ببینیم(که به صورت پیمایش روی یک لیست دیگر مانند تایم لاینی دیگر کار میکند)،
افرادی که این توییت را فیو کردند مشاهده کنیم

SettingPage:
در النجا میتوان کارهایی انجام داد از جمله:
دیلیت اکانت کردن،
خارج شدن از اکانت(log out)،
تنظیم سازی خصوصی( که در اینجا میتوان تعریف کرد که اکانتمان پرایوت یا پابلیک باشد،
لست سینمان را چه کسانی ببینند،
تغییر دادن رمز.)

MenuPage:
هر منو ما را راهی یکی از پیج ها میکند و ما میتوانیم انتخاب کنیم که وارد کدام صفحه شویم که رفتن به یک صفحه را منیجر انجام میدهد.

LoginPage:
این صفحه مربوط به هیچ کاربری نكست و مستقل از کاربران است چون برای تمام کاربران به صورت یکسان نمايش داده میشود و کارهای یکسان را انجام میدهد.
ابتدا از شما میپرسد اکانتی دارید یا نه ،
اگر داشتید ازتون یوزرنیم و پسوورد میگیرد که اگر درست بود وارد اکانتتان میشوید و اگر اکانت نداشتید برایتان یک اکانت میسازد.

ExlporePager:
در این صفحه ما میتوانیم اکانتی را سرچ کنیم یا به صورت رنوم تعداد توییت ببینیم
سرچ کردن اکانت به این صورت است که یوزرنیم را از شما میگیرد و وارد اینفوی اکانت مورد نظر میشود
توییت های رندوم هم  به این صورت کار میکنند که از بین تمام افرادی که اکانتشان پابلیک است و ما رو بلاک نکرده باشند و اکنیو باشند یک توییت به صورت رندوم انتخاب میکند و نمایش میدهد.

PersonalPage:
در این صفحه ما اینفو و اعلانات شخص را داریم و میتوانیم:
توییت جدد بگذاریم و توییت های قبل خود را مشاهده کنیم،
اطلاعات پروفایلمان را تغییر دهم از جمله:
{
نام،
نام خانوادگی،
رمز،
ایمیل،
شماره تلفن،
بیو،
تاريخ تولد
}
فالویینگ ها و فالوور ها و بلک لیست را مشاهده کنیم،
میتوانیم به صفحه ی Info و Notification خود نیز برویم ،
و در اینجا میتوانیم یک لیست درست کنیم از فالویینگ های موردنظرمان

NotificationPage:
هر صدام از این صفحات شامل requests و system messages میباشد که برای هرکدام نیز اندیسی وجود دارد که به پیام مورد نظر اشاره میکند.
هر request و system message به صورت جدا جدا نمایش داده میشود.
در اینجا میتوانیم پیام های سیستم را ببینیم و همینطور درخواست ها را مشاهده کنیم و به قبلی و بعد برویم.
با مشاهده ی هر درخواست میتوان:
میتوان آن را پذیرفت،
رد کردن با فرستادن اعلان،
رد کرد بدون فرستادن اعلان.

InfoPage:
اینفو یک ویزیتور دارد و یک صاحب صفحه.
این صفحه ی هر اکانت چیزی است که ویزیتور میتواند آن را ببیند که عبارت است از:
نام،
نام خانوادگی،
یوزر نیم،
آیدی،
بیو،
لست سین،
اگر ویزیتور صاحب صفحه نیست به ویزیتور میگوید که صاحب صفحه ویزیتور را فالو کرده یا خیر.
حالا کارهایی که در این صفحه میتوان انجام داد عبارتنا از:
فالو یا آنفالو کردن،
بلاک کردن یا آنبلاک کردن،
ریپورت کردن،
پیام دادن،
دیدن فالویینگ ها و فالوور های اکانت،
اضافه و خارج کردن اکانت به لیست های مورد نظر.

Message:
این کلاس برای این طراحی شده است که پیغام ۲ کاربر به یکدیگر باشد و با توییت متفاوت است.
هر پیام دارای:
متن،
صاحب پیام که برای راحتی کار هم به صورت يوزر نیم و هم به صورت اکانت ذخره شده،
زمان پیام،
فورواردی بودن یا نبودن پیام،
سین خوردن یا نخوردن پیام،
اندیس پیام،
انتخاب شدن پیام.
تايم هر پیام به این صورت تعیین میشود که هنگام ارسال پیام لحظه را ثبت میکند و آنا نسبت میدهد و به شکل String آن را نگه میدارد.
اگر پیام فورواردی باشد بالا آن نوشته میشود.
اندرس پیام برای انتخاب کردن پیام استفاده میشود.

MessagesPage:
این صفحه دارای یک لیست از ChatRoom  هاست که در اینجا میتوان:
وارد save messages یا چت رومی با اکانت دیگر شد،
چت روم جديد ساخت،
یک پیام نوشت و آن را به هرکه خواست بفرستد.

ChatRoom:
این صفحه دارای یک اکانت که فرد صحبت کننده است و یک اکانت که فرد مقابل است که آن را listener نام گذاری کردم.
یک لیست از پیام ها را داراست که همان پیام های بین ۲ کاربر است و پیام های خود کاربر با رنگ بنفش و پیام های اکانت مقابل با رنگ زرد نمایش داده میشود.
هر چت روم دارای unreadMessages میباشد که تعداد پیام های خوانده نشده است و دارای پیام انتخاب شده و اندیس نشان دادن صفحه است.
اندیس نشان دادن صفحه برای این به کار می رود که من در هر چت روم ۱۰ تا ۱۰ تا پیام ها را نمایش میدهم(البته امکان دیدن تمام پیام ها به صورت یکجا وجود دارد) و برای دیدن ۱۰ پیام بعدی اندیس را زیاد یا کم میکنیم.
حالا در اینجا میتوان :
یک پیام را انتخاب کرد و آن را فوروارد کرد یا سیو کرد(نقطه قوت برنامج من اینجاست که میتواند فیچر های بیشتری مانند ریپلای کردن یا دیلیت کردن پیام را به راحتی به آن اضافه کرد)،
یک پیام جدید نوشت و آن را ارسال کرد،
۱۰ پیام بعد یا قبلی را مشاهده کرد،
تمام پیام ها را مشاهده کرد.

CLI:
هر پیج من یک CLI مخصوص به خود و جدا دارد که با کاربر در ارتباط است و به شما یک منو میدهد و شما با وارد کردن كلمه ی مورد نظر درخواست خود را ارائه میدهید 

نکته:
در اکثر صفحات من ۳ گزینه ی back, quit, exit مشاهده میشود
که با انتخاب هرکدام اتفاقات رخ میدهد:
Exit:
کاربر آفلاین میشود،
برنامه شما Save میشود،
برنامه بسته میشود.
Quit:
کاربر آفلاین میشود،
برنامه شما Save میشود،
وارد صفحه ی Login میشود.
Back:
این صفحه بسته میشود،
وارد صفحه ی قبلی میشود.

Tweet:
این کلاس مانند کلاس Message است اما یکسری تفاوت هایی دارد این کلاس دارای:
متن،
نویسنده ی توییت،
زمان ارسال،
لیست علاقه مندان،
لیست کامنت ها،
تعداد ریتوییت ها،
ریتوییت بودن یا نبودن،
